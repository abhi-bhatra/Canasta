## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

loadBalancer: {}

## @section Elasticsearch parameters
## Elasticsearch image version
## ref: https://docker.elastic.co/elasticsearch/elasticsearch
## @param elasticsearch.image.tag Elasticsearch image tag
## @param elasticsearch.image.pullPolicy Elasticsearch image pull policy
elasticsearch:
  registry: docker.elastic.co
  repository: elasticsearch/elasticsearch 
  tag: 7.10.2
  memory: "2Gi"

image:
  registry: ghcr.io
  repository: canastawiki/canasta
  tag: 1.3.0
  digest: ""
  replicaCount: 1
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false

## External database configuration
##
externalDatabase:
  ## @param externalDatabase.existingSecret Use existing secret (ignores previous password)
  ## Must contain key `mariadb-password`
  ## NOTE: When it's set, the `externalDatabase.password` parameter is ignored
  ##
  existingSecret: ""
  ## @param externalDatabase.host Host of the existing database
  ##
  host: ""
  ## @param externalDatabase.port Port of the existing database
  ##
  port: 3306
  ## @param externalDatabase.user Existing username in the external db
  ##
  user: bn_mediawiki
  ## @param externalDatabase.password Password for the above username
  ##
  password: ""
  ## @param externalDatabase.database Name of the existing database
  ##
  database: bitnami_mediawiki

env:
  MYSQL_PASSWORD: "mediawiki"
  MW_SITE_SERVER: "https://canastacli.tk"
  MW_SITE_FQDN: "canastacli.tk"
  PHP_UPLOAD_MAX_FILESIZE: "10M"
  PHP_POST_MAX_SIZE: "10M"
  PHP_MAX_INPUT_VARS: "1000"
  MW_SITEMAP_IDENTIFIER: "mediawiki"
  USE_EXTERNAL_DB: "true"
  MW_SITEMAP_SUBDIR:

discovery: "single-node"
bootstrap: true
ES_JAVA_OPTS: "-Xms512m -Xmx512m"

primary:
  persistence:
    existingClaim: "sitemap-data"
    size: "200Mi"
    accessModes:
      - ReadWriteOnce

secondary:
  persistence:
    existingClaim: "elasticsearch-data"
    size: "5Gi"
    accessModes:
      - ReadWriteOnce